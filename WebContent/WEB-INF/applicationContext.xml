<?xml version="1.0" encoding="UTF-8"?>
    <!--
        Licensed to the Apache Software Foundation (ASF) under one or more
        contributor license agreements. See the NOTICE file distributed with
        this work for additional information regarding copyright ownership.
        The ASF licenses this file to you under the Apache License, Version
        2.0 (the "License"); you may not use this file except in compliance
        with the License. You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0 Unless required by
        applicable law or agreed to in writing, software distributed under the
        License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
        CONDITIONS OF ANY KIND, either express or implied. See the License for
        the specific language governing permissions and limitations under the
        License.
    -->
<server xmlns="http://mina.apache.org/ftpserver/spring/v1"
	xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd    
       "
    id="myServer">
    <listeners>
        <nio-listener name="default" port="2121">
            <ssl>
                <keystore file="D:/javaworkspace/Holter/WebContent/WEB-INF/ftpserver.jks" password="password" />
            </ssl>
        </nio-listener>
    </listeners>
    <!-- 坑比  ftplets 必須放在file-user-manager前面 不然报标签错误 -->
    <ftplets>
		<ftplet name="ftpService">
			<beans:bean class="cn.holter.ftpserver.FtpService">
				<!--  <beans:property name="foo" value="123" /> -->
			</beans:bean>
		</ftplet>
	</ftplets>
    <!--<file-user-manager file="D:/javaworkspace/Holter/WebContent/WEB-INF/users.properties" />-->
    
    <db-user-manager>  
            <data-source>  
                <beans:bean class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
                    <!--<beans:property name="driverClass" value="${jdbc.driverClassName}" />  
                    <beans:property name="jdbcUrl" value="${jdbc.url}" />  
                    <beans:property name="user" value="${jdbc.username}" />  
                    <beans:property name="password" value="${jdbc.password}" /> --> 
                    
                    <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />              
                    <beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/test" />  
                    <beans:property name="username" value="root" />  
                    <beans:property name="password" value="" />            
                     
                </beans:bean>  
            </data-source>  
            <insert-user>  
                INSERT INTO HolterUser   
                    (userid, userpassword, homedirectory, enableflag, writepermission, idletime, uploadrate, downloadrate)   
                VALUES   
                    ('{userid}', '{userpassword}', '{homedirectory}', true, true, {idletime}, {uploadrate}, {downloadrate})  
            </insert-user>  
            <update-user>  
                UPDATE HolterUser SET  
                    userpassword='{userpassword}',  
                    homedirectory='{homedirectory}',  
                    enableflag={enableflag},  
                    writepermission={writepermission},  
                    idletime={idletime},  
                    uploadrate={uploadrate},  
                    downloadrate={downloadrate}  
                WHERE   
                    userid='{userid}'  
            </update-user>  
            <delete-user>DELETE FROM HolterUser WHERE userid = '{userid}'</delete-user>  
            <select-user>  
                SELECT   
                    userid, userpassword, homedirectory,  
                    enableflag, writepermission, idletime, uploadrate, downloadrate,  
                    maxloginnumber, maxloginperip   
                FROM   
                    HolterUser   
                WHERE   
                    userid = '{userid}'  
            </select-user>  
            <select-all-users>SELECT userid FROM HolterUser ORDER BY userid</select-all-users>  
            <is-admin>  
                SELECT userid FROM HolterUser WHERE userid='{userid}' AND userid='admin'  
            </is-admin>  
            <authenticate>SELECT userpassword from HolterUser WHERE userid='{userid}'</authenticate>  
        </db-user-manager>
    
</server>